
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

// #include <dt-bindings/zmk/pointing.h>

#define QWE 0
// #define NIC 1
// #define LIN 2
// #define NICL 3
// #define WIN 4
#define LWR 1
// #define LWRW 6
#define RSE 2
// #define RSEW 8
#define ADJ 3
// // #define ADJW 10
// #define MOV 11
// #define MOVW 12
// #define NUM 13
// #define BLE 14

&lt {
    quick-tap-ms = <140>;
};

&mt {
    quick-tap-ms = <140>;
};

&caps_word {
    continue-list = <UNDERSCORE MINUS>;
};

/ { // ここが唯一のルートノードの始まり
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri-layer {
            if-layers = <LWR RSE>;
            then-layer = <ADJ>;
        };
    }; // conditional_layers の閉じ括弧の後にセミコロンが必要

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWE";
            bindings = <
                &kp N1            &kp N2           &kp N3          &kp N4        &kp N5            &kp N6                                       &kp N7        &kp N8            &kp N9        &kp N0    &kp ESC    &kp BSPC
                &mt LSHFT TAB     &kp Q            &kp W           &kp E         &kp R             &kp T                                        &kp Y         &kp U				&kp I         &kp O     &kp P      &mt RSHFT MINUS
                &mt LCTRL TAB     &kp A            &kp S           &kp D         &kp F             &kp G                                        &kp H         &kp J				&kp K         &kp L     &kp SEMI   &mt RCTRL SQT
                &kp LALT          &kp Z            &kp X           &kp C         &kp V             &kp B                                        &kp N         &kp M				&kp COMMA     &kp DOT   &kp FSLH   &kp RGUI
                                  &kp LSHFT        &none           &kp LANG2     &mt LSHIFT SPACE  &mo LWR          &bootloader   &bootloader   &lt RSE ENTER &mt RSHFT SPACE	&kp LANG1     &none     &kp RSHFT
            >;
        };

        lower_layer {
            display-name = "LWR";
            bindings = <
                &none            &none      &none       &none         &none        &none                                        &none       &none          &none          &none             &none          &none
                &trans           &kp PG_UP  &kp LC(A)   &kp UP        &kp LC(E)    &mkp MB3                                     &kp DEL     &msc SCRL_LEFT &mmv MOVE_UP   &msc SCRL_RIGHT   &msc SCRL_UP   &kp LC(X)           
                &trans           &kp PG_DN  &kp LEFT    &kp DOWN      &kp RIGHT    &mkp MB1                                     &kp BSPC    &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_RIGHT   &msc SCRL_DOWN &kp LC(C)
                &trans           &kp LC(V)  &mkp MB1    &mkp MB3      &mkp MB2     &mkp MB2                                     &mkp MB1    &kp ENTER      &kp LA(LEFT)   &kp LA(RIGHT)     &kp LC(V)      &trans
                                 &trans     &none       &kp LSHFT     &kp LANG2    &trans            &none       &none          &trans      &kp LS(LC(V))  &kp RSHFT      &none             &trans
            >;
        };

        raise_layer {
            display-name = "RSE";
            bindings = <
                &none             &none             &none       &none       &none       &none                                       &none          &none        &none       &none       &none             &none
                &trans			  &kp F1            &kp F2      &kp F3      &kp F4      &kp F5                                      &kp F6         &kp F7    	&kp F8      &kp F9      &kp F10           &kp LC(X)
                &mt LCTRL GRAVE   &kp N1            &kp N2      &kp N3      &kp N4      &kp N5                                      &kp N6         &kp N7    	&kp N8      &kp N9      &kp N0            &kp LC(C)
                &trans            &kp INT1          &kp BSLH    &kp INT3    &kp SLASH   &kp ASTRK                                   &kp MINUS      &kp PLUS  	&kp LBKT    &kp RBKT    &kp LC(V)         &trans
                                  &trans            &none       &kp LSHFT   &kp SPACE   &trans       &none        &none             &trans         &kp INT4	    &kp RSHFT   &none       &trans
            >;
        };

        adjust_layer {
            display-name = "ADJ";
            bindings = <
                &soft_off         &none          &none          &none             &none          &none                                          &none          &none            &none            &none             &none                &sys_reset
                &trans            &kp F11        &kp F12        &kp C_MUTE        &kp C_VOL_DN   &kp C_VOL_UP                                   &kp CAPS       &kp PSCRN      	&kp SLCK         &kp PAUSE_BREAK   &kp LS(UP)     		&mt RSHFT INS
                &mt LCTRL LANG5   &out OUT_BLE   &out OUT_USB   &bt BT_SEL 3      &kp LS(RIGHT)  &kp G                                          &kp INT5       &none            &none            &none             &none     			&kp RCTRL
                &kp LALT          &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2      &kp K_APP      &kp LS(LEFT)                                   &kp LS(DOWN)   &kp LS(LG(LEFT))	&kp LS(LA(LEFT)) &kp LS(LA(RIGHT)) &kp LS(LG(RIGHT))	&trans
                                  &trans         &bt BT_CLR_ALL &none             &kp LS(LEFT)   &trans         &none          &none            &trans         &kp LS(RIGHT)    &none            &bootloader       &trans
            >;
        };
    };
};
