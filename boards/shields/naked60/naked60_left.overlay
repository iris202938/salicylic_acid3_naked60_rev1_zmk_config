#include <dt-bindings/zmk/matrix_transform.h>
#include "layouts.dtsi" // physical_layout0 が定義されているファイル

/ {
    chosen {
        // 一体型キーボードとして、物理レイアウト全体を使用
        zmk,physical-layout = &physical_layout0;
    };
    
    // 60キー一体型キーボード用のマトリクス変換
    keymap_transform_integrated: keymap_transform_integrated {
        compatible = "zmk,matrix-transform";
        
        // 5行 x 12列を想定 (キーボードの行数と、左右合わせた列数)
        columns = <12>;
        rows = <5>;
        
        // 物理レイアウトのキーのインデックス (0から59まで) を、
        // 5x12の電子マトリクスに順番通りにマッピングします。
        // ※ 最初のDTSの定義から、5行 x 12列 = 60キー分を抽出
        map = <
            // 1行目 (y=0): 左6キー + 右6キー 
            RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(0,9) RC(0,10) RC(0,11)
            // 2行目 (y=100): 左6キー + 右6キー
            RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(1,6) RC(1,7) RC(1,8) RC(1,9) RC(1,10) RC(1,11)
            // 3行目 (y=200): 左6キー + 右6キー
            RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5) RC(2,6) RC(2,7) RC(2,8) RC(2,9) RC(2,10) RC(2,11)
            // 4行目 (y=300): 左6キー + 右6キー
            RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5) RC(3,6) RC(3,7) RC(3,8) RC(3,9) RC(3,10) RC(3,11)
            // 5行目 (y=400): 12キー
            RC(4,0) RC(4,1) RC(4,2) RC(4,3) RC(4,4) RC(4,5) RC(4,6) RC(4,7) RC(4,8) RC(4,9) RC(4,10) RC(4,11)
        >;
        
        // 物理レイアウトの最初のキーから使用するため、オフセットは 0
        col-offset = <0>;
    };

    // kscan (電子マトリクス配線) の定義
    kscan_integrated: kscan {
        compatible = "zmk,kscan-gpio-matrix";
        wakeup-source;
        diode-direction = "col2row";
        
        // 5行分のGPIOピン
        // 2つ目の質問の kscan0 ノードの row-gpios を流用
        row-gpios
            = <&gpio0 19 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
             ,<&gpio0 20 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
             ,<&gpio0 22 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
             ,<&gpio0 23 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
             ,<&gpio0 0 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
             ;
        
        // 12列分のGPIOピン
        // 2つ目の質問の kscan0 ノードの col-gpios を流用
        col-gpios
            = <&gpio0 5 GPIO_ACTIVE_HIGH>
             ,<&gpio0 0 GPIO_ACTIVE_HIGH>
             ,<&gpio0 30 GPIO_ACTIVE_HIGH>
             ,<&gpio0 3 GPIO_ACTIVE_HIGH>
             ,<&gpio1 14 GPIO_ACTIVE_HIGH>
             ,<&gpio1 15 GPIO_ACTIVE_HIGH>
             ,<&gpio0 0 GPIO_ACTIVE_HIGH> // 右手側 1列目 (物理レイアウトの x=800)
             ,<&gpio0 19 GPIO_ACTIVE_HIGH>
             ,<&gpio1 0 GPIO_ACTIVE_HIGH>
             ,<&gpio1 3 GPIO_ACTIVE_HIGH>
             ,<&gpio0 0 GPIO_ACTIVE_HIGH>
             ,<&gpio0 0 GPIO_ACTIVE_HIGH> // 右手側 6列目 (物理レイアウトの x=1300)
             ;
    };
};

// 物理レイアウトノードに、この一体型の設定を適用する
&physical_layout0 {
    kscan = <&kscan_integrated>;
    transform = <&keymap_transform_integrated>;
};